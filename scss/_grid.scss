// Variaveis do grid
$cols: 12;
$gutter: 20px;
$large-device: 1200px;
$medium-device: 760px;
$small-device: 480px;




// ===> Box-sizing <===
*, *::after, *::before {
    box-sizing: border-box;
}




// ===> Mixins de media querie <===
@mixin device($size) {
    @if $size == large {
        @media screen and (min-width: #{$large-device}) {
            @content;
        }
    }
    @else if $size == medium {
        @media screen and (min-width: #{$medium-device}) and (max-width: #{$large-device - 1}) {
            @content;
        }
    } 

    @else if $size == small {
        @media screen and (max-width: #{$medium-device - 1}) {
            @content;
        }
    }
}

p {
    color: blue;
    @include device(medium) {
        color: pink;
    }

    @include device(small) {
        color: aqua;
    }
}







// ===> Função do grid <=== 
@function grid($col, $offset: false) {
    $width: $col / $cols * 100 + "%";
    $result: calc(#{$width} - #{$gutter});
    @if $offset == offset {
        $gutter: $gutter / 2;
        $result: calc(#{$width} + #{$gutter});
    }
    @return $result;
}  



// Gerar as Classes de grid
@for $index from 1 through $cols {
    .grid-#{$index} {
        width: grid($index);
    }
}



// Mixin estrutura do grid
@mixin grid-structure {
    float: left;
    min-height: 1px;
    margin-left: $gutter / 2;
    margin-right: $gutter / 2;
    @include device(small) {
        width: 100%;
        float: none;
        margin-left: 0px;
        margin-right: 0px;
    }
}


[class^="grid-"] {
    @include grid-structure;
}



//12:52

